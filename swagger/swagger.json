{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "SmartCar's API",
    "title": "SmartCat API",
    "contact": {
      "name": "Andy",
      "email": "chaochaoqi@gmail.com"
    },
    "version": "0.1"
  },
  "host": "localhost:8003",
  "basePath": "/",
  "paths": {
    "/vehicles/{vehicle_id}": {
      "get": {
        "description": "Returns stats for the requested vehicle",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "Vehicles"
        ],
        "summary": "Returns stats for the requested vehicle",
        "operationId": "GetVehicle",
        "parameters": [
          {
            "type": "integer",
            "description": "The vehicle ID number",
            "name": "vehicle_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle object.\n",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          },
          "400": {
            "description": "Bad request e.g. Invalid vehicle_id",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Vehicle ID must be an integer"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vehicle_id}/battery": {
      "get": {
        "description": "Returns status of the battery for the requested vehicle",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "Vehicles"
        ],
        "summary": "Returns status of the battery for the requested vehicle",
        "operationId": "getVehicleBatteryStatus",
        "parameters": [
          {
            "type": "integer",
            "description": "The vehicle ID number",
            "name": "vehicle_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle object.\n",
            "schema": {
              "$ref": "#/definitions/Battery"
            }
          },
          "400": {
            "description": "Bad request e.g. Invalid vehicle_id",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Vehicle ID must be an integer"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vehicle_id}/doors": {
      "get": {
        "description": "Returns status of the doors for the requested vehicle",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "Vehicles"
        ],
        "summary": "Returns status of the doors for the requested vehicle",
        "operationId": "getVehicleDoors",
        "parameters": [
          {
            "type": "integer",
            "description": "The vehicle ID number",
            "name": "vehicle_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle object.\n",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Door"
              }
            }
          },
          "400": {
            "description": "Bad request e.g. Invalid vehicle_id",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Vehicle ID must be an integer"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vehicle_id}/engine": {
      "post": {
        "description": "Submits commands to the engine for the requested vehicle",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "Vehicles"
        ],
        "summary": "Submits commands to the engine for the requested vehicle",
        "operationId": "actionEngine",
        "parameters": [
          {
            "type": "integer",
            "description": "The vehicle ID number",
            "name": "vehicle_id",
            "in": "path",
            "required": true
          },
          {
            "description": "body parameters",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EngineActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle object.\n",
            "schema": {
              "$ref": "#/definitions/EngineActionResponse"
            }
          },
          "400": {
            "description": "Bad request e.g. Invalid vehicle_id",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Vehicle ID must be an integer"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{vehicle_id}/fuel": {
      "get": {
        "description": "Returns status of the fuel for the requested vehicle",
        "consumes": [
          "application/x-www-form-urlencoded",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "Vehicles"
        ],
        "summary": "Returns status of the fuel for the requested vehicle",
        "operationId": "getVehicleFuelStatus",
        "parameters": [
          {
            "type": "integer",
            "description": "The vehicle ID number",
            "name": "vehicle_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle object.\n",
            "schema": {
              "$ref": "#/definitions/Fuel"
            }
          },
          "400": {
            "description": "Bad request e.g. Invalid vehicle_id",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Vehicle ID must be an integer"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Battery": {
      "description": "Battery response",
      "type": "object",
      "required": [
        "percentage"
      ],
      "properties": {
        "percentage": {
          "description": "Percentage",
          "type": "number",
          "format": "double",
          "x-go-name": "Percentage",
          "example": 44.3
        }
      },
      "x-go-package": "app_api/apis/vehicle"
    },
    "Door": {
      "description": "Door response",
      "type": "object",
      "required": [
        "location",
        "locked"
      ],
      "properties": {
        "location": {
          "description": "Location",
          "type": "string",
          "x-go-name": "Location",
          "example": "frontLeft"
        },
        "locked": {
          "description": "Locked",
          "type": "boolean",
          "x-go-name": "Locked",
          "example": false
        }
      },
      "x-go-package": "app_api/apis/vehicle"
    },
    "EngineActionRequest": {
      "description": "EngineActionRequest response",
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "Action",
          "type": "string",
          "x-go-name": "Action",
          "example": "START"
        }
      },
      "x-go-package": "app_api/apis/vehicle"
    },
    "EngineActionResponse": {
      "description": "EngineActionResponse response",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "description": "Status",
          "type": "string",
          "x-go-name": "Action",
          "example": "success"
        }
      },
      "x-go-package": "app_api/apis/vehicle"
    },
    "Fuel": {
      "description": "Fuel response",
      "type": "object",
      "required": [
        "percentage"
      ],
      "properties": {
        "percentage": {
          "description": "Percentage",
          "type": "number",
          "format": "double",
          "x-go-name": "Percentage",
          "example": 44.3
        }
      },
      "x-go-package": "app_api/apis/vehicle"
    },
    "Vehicle": {
      "description": "Vehicle response",
      "type": "object",
      "required": [
        "vin",
        "color",
        "doorCount",
        "driveTrain"
      ],
      "properties": {
        "color": {
          "description": "Color",
          "type": "string",
          "x-go-name": "Color",
          "example": "Metallic Silver"
        },
        "doorCount": {
          "description": "DoorCount",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DoorCount",
          "example": 4
        },
        "driveTrain": {
          "description": "DriveTrain",
          "type": "string",
          "x-go-name": "DriveTrain",
          "example": "v8"
        },
        "vin": {
          "description": "Vin",
          "type": "string",
          "x-go-name": "Vin",
          "example": "1213231"
        }
      },
      "x-go-package": "app_api/apis/vehicle"
    }
  }
}